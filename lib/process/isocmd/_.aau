import process.popen;
namespace process.isocmd;

if( !..io.exist( "~/lib/process/isocmd/.res/isocmd.exe" ) ){
	error("缺少~/lib/process/isocmd/.res/isocmd.exe",2)
}
install = function(){
	var prcs  = ..process.popen( "~/lib/process/isocmd/.res/isocmd.exe","-i" );
	var s = prcs.read(-1)
	prcs.close();
	return s;
}

remove = function(){
	var prcs  = ..process.popen( "~/lib/process/isocmd/.res/isocmd.exe","-r" );
	var s = prcs.read(-1)
	prcs.close();
	return s;
} 
 
change = function(n,drive){
	var prcs  = ..process.popen( "~/lib/process/isocmd/.res/isocmd.exe","-c",tostring(n),drive );
	var s = prcs.read(-1)
	prcs.close();
	return s;
}

start = function(){
	var prcs  = ..process.popen( "~/lib/process/isocmd/.res/isocmd.exe","-s" );
	var s = prcs.read(-1)
	prcs.close();
	return s;
}

stop = function(){
	var prcs  = ..process.popen( "~/lib/process/isocmd/.res/isocmd.exe","-1" );
	var s = prcs.read(-1)
	prcs.close();
	return s;
}

number = function(num){
	var prcs  = ..process.popen( "~/lib/process/isocmd/.res/isocmd.exe","-n",tostring(num:1));
	var s = prcs.read(-1)
	prcs.close();
	return s;
}

mount = function(drive,path){
	var prcs  = ..process.popen( "~/lib/process/isocmd/.res/isocmd.exe","-m",drive,..io.fullpath(path));
	var s = prcs.read(-1)
	prcs.close();
	return s;
}

eject = function(drive){
	var prcs  = ..process.popen( "~/lib/process/isocmd/.res/isocmd.exe","-e",drive);
	var s = prcs.read(-1)
	prcs.close();
	return s;
}

info = function(drive){
	var prcs  = ..process.popen( "~/lib/process/isocmd/.res/isocmd.exe","-p",drive);
	var s = prcs.read(-1) 
	return s;
}

drives = function(drive){
	var prcs  = ..process.popen( "~/lib/process/isocmd/.res/isocmd.exe","-p",drive);
	var s = prcs.read(-1) 
	if( s ){ 
		var devices,letters = ..string.match(s,"Number of Devices\=(\d+)\, DriveLetters\=\[(\a+)\]")
		return letters; 
	} 
}

/**intellisense(process.isocmd)
remove() = 移除驱动,\n需要管理权限，可能需要重启
install() = 安装驱动,\n需要管理权限，可能需要重启
number(1) = 设置虚拟光驱数据,\n需要管理权限，可能需要重启
start() = 启用驱动,\n需要管理权限
strop() = 启用驱动,\n需要管理权限
info() = 返回光驱信息
drives() = 返回虚拟光区盘符\n返回值为盘符使用的字母组成的字符串
mount("J:__","ISO路径") = 加载到虚拟光驱
eject("J:__") = 自虚拟光驱卸载文件
end intellisense**/
