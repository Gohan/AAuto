/*
作者：蝈蝈
http://bbs.aau.cn/forum.php?mod=viewthread&tid=3848
*/ 
namespace inet; 

class ipdata{
    ctor( path ){
        var ipData = ..io.open(path or "~\lib\inet\ipdata\.res\qqwry.dat","rb")
        var index = ipData.read({INT beginIndex;INT endIndex})
        var indexCount = (index.endIndex - index.beginIndex)/7 + 1
        ..table.add_gc(this,"close"); 
    }; 
    close = function(){
    	if(ipData){
    		ipData.close();
    		ipData = null;
    	}
    }; 
    string2ip = function (str){
        var ss = ..string.split(str,'.')
        var ip = 0
        for( i =1;#ss;1){
            ip = (ip << 8) + tonumber(ss[ i ])
        }
            
        return ip;      
    };     
    find = function(ip,left,right){
        if(right-left==1){ 
            return left;
        }
        else {
            var middle = ..math.floor((left + right)/2)
            var offset = index.beginIndex + middle*7
            ipData.seek("set",offset)
            var newIp = ipData.read({INT buf}).buf

            if(ip<=newIp){
                return this.find(ip,left,middle); 
            }
            else {
                return this.find( ip,middle,right );
            }
        }       
    };
    getLong3 = function (offset = 0){
        if(offset){ 
            ipData.seek("set",offset)
        }   
        var str = ipData.read({WORD n;BYTE m})  
        return (str.m << 16) + str.n; 
    }; 
    getString = function(offset = 0){
        if(offset!=0){  
            ipData.seek("set",offset)
         }
         
         var bytes ={}
         while( 
             var ch;
             ch = ipData.read(1); 
             ch ? ch[1] 
         ) { 
         	 
         	if( ch[1] >= 0x80 ){
         		var n = ipData.read(1);
         		if( ! (n&&n[1]) ) break;
         		..table.push(bytes,ch);
         		..table.push(bytes,n);
         	}
         	else {
         		..table.push(bytes,ch);
         	}
         	
         } 
         
         return ..string.join(bytes); 
    };
    getAreaAddr = function(offset=0){
        if(offset){ 
            ipData.seek("set",offset)
        }
        
        var byte = ipData.read({BYTE byte}).byte
        if(byte==0x01||byte==0x02){
            var p = this.getLong3()
            if(p)
                return this.getString( p ); 
            else 
                return ""; 
        }
        else {
            return this.getString( offset )
        }

    };   
    getAddr = function (offset,ip=0){
        ipData.seek("set",offset + 4)

        var countryAddr = "" 
        var areaAddr = "" 
        
        var byte = ipData.read({BYTE b}).b
        
        if(byte==0x01){
            var countryOffset = this.getLong3()
            ipData.seek("set",countryOffset)
            var byte2 = ipData.read({BYTE b}).b
            if(byte2==0x02){
                countryAddr = this.getString( this.getLong3() )
                ipData.seek("set",countryOffset + 4)
             }
             else {
                countryAddr = this.getString( countryOffset )
             }
             areaAddr = this.getAreaAddr()
        }
        elseif(byte==0x02){
            countryAddr = this.getString( this.getLong3() )
            areaAddr = this.getAreaAddr( offset + 8 )
        }
        else {
            countryAddr = this.getString( offset + 4 )
            areaAddr = this.getAreaAddr( )
        }
        
        return  countryAddr + "/" + areaAddr;
    };
    query = function (ip){
        var ip = this.string2ip(ip)
        var aindex = this.find(ip,0,indexCount - 1)
        var ioffset = (index.beginIndex) + aindex * 7
        var aoffset = this.getLong3( ioffset + 4)
        var addr = this.getAddr( aoffset )
        return ..string.match(addr,"(.+?)/*\w+\.\a+") or addr;  
    } 
}

/**intellisense()
inet.ipdata = 纯直IP数据库
inet.ipdata() = 创建IP数据库连接\n!inet_ipdata.
!inet_ipdata.query( = 查询IP归属性
!inet_ipdata.query(.("IP地址") = 返回IP归属地
!inet_ipdata.close() = 关闭数据库连接
end intellisense**/
